@model Attendance
@inject Payroll.Database.PayrollDbContext dbContext

<form asp-action="AddOrUpdateAttendance" asp-controller="Schedule" data-ajax="true" data-ajax-method="POST" data-ajax-update="#weekly-schedule" data-ajax-begin="showModal()" data-ajax-success="sendNotification('success', 'Attendance record was just saved');hideModal()" id="addUpdateConnectionForm" data-ajax-failure="handleModalPostFailure">
    @Html.AntiForgeryToken()
    <input asp-for="Id" type="hidden" value="@Model.Id" />
    <header class="modal__header">
        <h2 class="modal__title" id="modal-1-title">
            View Attendance
            <br />
            <small>@Model.Date.ToLongDateString()
                @if (Model.IsPublished)
                {
                    <i class="fa fa-signature text-success" title="Published"></i>
                }
                @if (Model.IsOvertime)
                {
                    <i class="fa fa-hourglass-start" title="Overtme request"></i>
                }
                @if (Model.ScheduleId.HasValue)
                {
                    <a class="btn-link" asp-action="Detail" asp-controller="Schedule" asp-route-id="@Model.ScheduleId" target="_blank">
                         &nbsp;<i class="fad fa-calendar-alt"></i>
                    </a>
                }
            </small>
        </h2>
        <button class="modal__close" aria-label="Close modal" data-micromodal-close></button>
    </header>

    <main class="modal__content" id="modal-1-content">
        <div class="form-group">
            <partial name="_EmployeeSummary" model="@Model.Employee" />
        </div>
        <div class="form-group">
            <span class="sch-@Model.ShiftColor text-white p-2 rounded">Work time: @Model.Duration</span>
        </div>
        <div class="form-group">
            <label class="control-label">Status</label>
            <partial name="_ViewAttendanceStatus" />
        </div>

        @if (Model.TotalWorkedHours > 0)
        {
            <div class="form-group mb-0">
                <label class="control-label">Worked Hours:</label>
                <span class="text-primary">@Model.TotalWorkedHours.GetHourMinString()</span> + @Model.TotalBreakHours.GetHourMinString()
            </div>
        }
        @if (Model.TotalHoursWorkedPerSchedule > 0)
        {

            <div class="form-group mb-0">
                <label class="control-label">@(Model.IsOvertime ? "Tracked OT Hours" : "Tracked Hours"):</label>
                <span class="text-primary">@Model.TotalHoursWorkedPerSchedule.GetHourMinString()</span>
                @if (Model.HasError)
                {
                    <i class="text-danger fad fa-exclamation-triangle" title=" @Model.ErroMsg"></i>
                }
            </div>
        }

        @if (Model.TotalHoursWorkedOutOfSchedule > 0 && !Model.IsOTAmountClaimed)
        {
            <div class="form-group">
                <a class="btn-link" data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" asp-action="NewRequestOfType" asp-controller="Request" asp-route-type="Overtime" asp-route-empId="@Model.EmployeeId" asp-route-attn="@Model.Id" data-ajax-method="POST">
                    <i class="fa fa-clock text-purple"></i> Claim @Model.TotalHoursWorkedOutOfSchedule.GetHourMinString() for Overtime
                </a>
            </div>
        }
        else if (Model.IsOTAmountClaimed)
        {
            <div class="form-group">
                <i class="fa fa-check-circle text-purple"></i> @Model.TotalHoursWorkedOutOfSchedule.GetHourMinString() Claimed for Overtime
            </div>
        }
        @*<div class="form-group">
            <span>
                Tracked Hours: <span class="text-primary">@Model.TotalWorkedHours.GetHourMinString()</span> + @Model.TotalBreakHours.GetHourMinString() - Per schedule

                @if (Model.HasError)
                {
                    <i class="text-danger fad fa-exclamation-triangle" title=" @Model.ErroMsg"></i>
                }
            </span>
        </div>*@

        @*<div class="form-group">
            Check-in / out: @Model.DurationCheckin
        </div>*@

        @if (Model.WorkEndTime.Date >= DateTime.Now.Date)
        {
            if (Model.WorkStartTime > DateTime.Now)
            {
                // work not started
                <small>work starting in about @(Model.WorkStartTime.GetTimeDifference())</small>
            }
            else if (DateTime.Now > Model.WorkStartTime && DateTime.Now <= Model.WorkEndTime)
            {
                <small>work has started. work end time in @Model.WorkEndTime.ToString("h tt").ToLower()</small>
            }
            else
            {
                <small>work has ended at @Model.WorkEndTime.ToString("h tt").ToLower(). It's been about @(Model.WorkEndTime.GetTimeDifference())</small>
            }
        }
        @if (Model.WorkStartTime.Date != Model.WorkEndTime.Date)
        {
            <div class="form-group">
                <small>* overnight duty</small>
            </div>
        }

        @if (Model.BiometricRecords.Any())
        {
            <div class="text-primary" onclick="$('.dd').toggle()"><i class="fad fa-clock"></i> View Clock Records</div>
            <div class="dd" style="display:none">
                @foreach (var item in Model.BiometricRecords.OrderBy(a => a.DateTime).ToList())
                {
                    <p class="mb-0">@item.DateTime.ToLocalFormat(true) &middot; @item.Location &middot; @item.BiometricRecordState</p>
                }

                <a class="btn-link" data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" asp-action="ViewBiometricRelate" asp-route-id="@Model.Id" asp-route-q="rnd_create">
                    <i class="fa fa-user-shield"></i> View Timeline
                </a>
            </div>
        }
        else if(!Model.IsOvertime)
        {
            <a class="btn-link" data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" asp-action="AddBiometricRelate" asp-controller="Schedule" asp-route-id="@Model.Id">
                <i class="fa fa-plus-circle"></i> Add Clock Record
            </a>
        }
        @if (Model.Requests.Count > 0)
        {
            <hr />
            <p class="mt-2">
                <i class="fad fa-paper-plane"></i> Related Requests (@Model.Requests.Count)
            </p>

            <partial name="_ViewRequestSummary" model="@Model.Requests" />
        }
    </main>
    <footer class="modal__footer">

        <a class="modal__btn modal__btn-primary" data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" asp-action="AddOrUpdateAttendance" asp-route-id="@Model.Id">
            <i class="fa fa-user-shield"></i> Edit
        </a>
        &nbsp;
        <a class="modal__btn modal__btn-primary" data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" asp-action="AttendanceChangeRequest" asp-controller="Request" asp-route-id="@Model.Id" disabled="@(Model.Requests.Any(x => x.Status == WorkItemStatus.Submitted) ? "disabled" : "")">
            <i class="fa fa-user-shield"></i> Make Request
        </a>

        &nbsp;

        @if (Model != null && Model.Id > 0)
        {
            <a class="modal__btn modal__btn-danger float-right" asp-action="Remove" asp-route-id="@Model.Id" data-ajax-method="POST" data-ajax="true" data-ajax-failure="handleModalPostFailure" data-ajax-success="sendNotification('success', 'Work between @Model.Duration was just removed');hideModal();$('div.item-@Model.Id').hide()" data-ajax-confirm="Are you sure you want to remove this work from @Model.Duration" data-ajax-begin="convertToLoadingTable('#tblMasterPayAdjustments')">Remove</a>
        }
    </footer>
</form>


<script>
    
    $('.src').click(function (e) {
        var match = $('.table-submissions')
            .find('tr.' + $(this).data('target'));

        $('.table-submissions tbody tr').not(match).hide();
        $(match).not('.fields-row').show();
        $('.src').removeClass('active');
        $(this).addClass('active');
    });

    $(".has-datepicker").flatpickr({
        dateFormat: "j-M-Y"
    });

    $(".has-timepicker").flatpickr({
        enableTime: true,
        noCalendar: true,
        dateFormat: "H:i",
        time_24hr: true
    });
</script>