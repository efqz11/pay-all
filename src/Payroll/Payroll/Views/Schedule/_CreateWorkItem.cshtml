@model ScheduleCreateVm

<style>
    .select2-container,
    .select2-selection--multiple,
    .select2-results {
        font-size: small !important;
        width: 100% !important;
    }
</style>
<form asp-action="CreateWorkItem" asp-controller="Schedule" data-ajax="true" data-ajax-method="POST" data-ajax-update="#tasks-schedule" data-ajax-success="shideModal('Schedule was created successfully');UpdateSeach()" id="userForm" data-ajax-failure="handleModalPostFailure" onsubmit="">
    @Html.AntiForgeryToken()
    <header class="modal__header">
        <h2 class="modal__title" id="modal-1-title">
            Create Work Item(s)
        </h2>
        <button class="modal__close" aria-label="Close modal" data-micromodal-close></button>
    </header>
    <main class="modal__content" id="modal-1-content">
        <input asp-for="IsForDepartment" type="hidden" />
        <input type="hidden" asp-for="ShiftDurationStart" />
        <input type="hidden" asp-for="ShiftDurationEnd" />
        @*<div class="form-group">
            <partial name="_AvatarUpload" />
        </div>*@
        <div class="form-group dept-emp">
            <label for="EmployeeIds" class="control-label">Choose Employees</label>
            <select asp-for="EmployeeIds" class="form-control" multiple data-width="100%"></select>
            <small><a class="btn-link p-0" href="#" onclick="event.stopPropagation(); $('.dept-emp').toggle();$('#IsForDepartment').val(true)">or choose specific department</a></small>
        </div>

        <div class="form-group dept-emp" style="display:none">
            <label for="DepartmentId" class="control-label">Choose department</label>
            <select asp-for="DepartmentId" asp-items="@ViewBag.DepartmentId" class="form-control"></select>
            <small>  <a class="btn-link p-0" href="#" onclick="event.stopPropagation(); $('.dept-emp').toggle(); $('#IsForDepartment').val(false)">or choose individual employees</a></small>
        </div>

        <div class="form-group">
            <p class="mb-2">Creating Tasks for dates between @Model.ShiftDurationStart.GetDuration(Model.ShiftDurationEnd.Value, User)</p>

            <a class="btn-link" asp-action="SelectDates" asp-route-start="@Model.ShiftDurationStart" asp-route-end="@Model.ShiftDurationEnd" asp-route-for="1" data-ajax-method="GET" data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" data-ajax-failure="HandleModalPostFailure">Change dates</a>
        </div>




        @*<div class="form-group">
            <label class="custom-control custom-checkbox">
                <input type="checkbox" asp-for="IsRecurring" value="false" class="custom-control-input" tabindex="5" onchange="$('#notRecurring, #notRecurring').toggle(); onCheckChange(this)" />
                <span class="custom-control-label" for="chbxTerms">
                    Is this schedule repeating?
                </span>
            </label>
        </div>*@
        <div id="notRecurring">
            <table class="table table-sm">
                <thead>
                    <tr>
                        <th><span>Day</span></th>
                        <th><span>Work</span></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                    @for (int i = 0; i < Model.Days.Count; i++)
                    {
                        <input type="hidden" asp-for="@Model.Days[i].Date" />
                        <tr>
                            <td><small>@Model.ShiftDurationStart.AddDays(i).ToString("dd MMM, ddd")</small> <input type="hidden" asp-for="@Model.Days[i].DayOfWeek" class="is-off" /></td>
                            <td><select asp-for="@Model.Days[i].WorkIds" asp-items="@(new MultiSelectList(Model.Works, "Id", "Name", Model.Days[i].WorkIds))" class="form-control form-control-sm work-ids" multiple></select></td>
                            <td><a class="btn btn-sm btn-info btn-make-off text-white"><i class="fa fa-close"></i> Off day</a> <input type="hidden" asp-for="@Model.Days[i].IsOff" class="is-off" /> </td>
                            @*<td><input asp-for="@Model.Days[i].MinHours" class="form-control" /></td>*@
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @*<div class="row">
            <div class="form-group col">
                <label asp-for="ShiftDurationStart" class="control-label">
                    Start Date
                </label>
                <input type="text" asp-for="ShiftDurationStart" value="@Model.ShiftDurationStart.ToString("dd-MMM-yyyy")" class="form-control has-datepicker" />
                <span asp-validation-for="ShiftDurationStart" class="text-danger"></span>
            </div>

            <div class="form-group col">
                <label asp-for="ShiftDurationEnd" class="control-label">End Date </label><small class="btn-link" onclick="$('#ShiftDurationEnd').val('')"> clear end date</small>
                @if (Model.ShiftDurationEnd.HasValue)
                {
                    <input type="text" asp-for="ShiftDurationEnd" value="@Model.ShiftDurationEnd.Value.ToString("dd-MMM-yyyy")" class="form-control has-datepicker" />
                }
                else
                {
                    <input type="text" asp-for="ShiftDurationEnd" class="form-control form-control-static" value="No end date" />
                }

                <span asp-validation-for="ShiftDurationEnd" class="text-danger"></span>
            </div>
        </div>*@


        <div id="notRecurring" style="display:none">
            <div class="row">
                <div class="form-group col">
                    <label for="Work" class="control-label">Select work</label>
                    <select asp-for="@Model.WorkId" asp-items="@(new SelectList(Model.Works, "Id", "Name", Model.WorkId))" class="form-control "></select>
                </div>
                <div class="form-group col">
                    <label asp-for="RecurringFrequency" class="control-label">Repeating Frequency</label>
                    <select asp-for="RecurringFrequency" asp-items="@(Html.GetEnumSelectList<RecurringFrequency>())" class="form-control"></select>
                </div>
            </div>
            <small>Tasks will be auto created on attendance created days, tasks will be due based on recurring frequency</small>
        </div>

        @*<div class="form-group">
            <label asp-for="ShiftId" class="control-label">
                Choose Shift
                <small class="">
                    <a data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" aria-label="Click to view all users have access" role="tooltip" data-microtip-position="top" href="/Company/ChangeWorkType/1">
                        <i class="ion ion-edit"></i> Change
                    </a>
                </small>
            </label>
            <select asp-for="ShiftId" asp-items="@ViewBag.ShiftId" class="form-control"></select>
        </div>*@

        @*<div class="form-group">
            <label asp-for="WorkId" class="control-label">
                Choose Work
                <small class="">
                    <a data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" aria-label="Create new work" role="tooltip" data-microtip-position="top" asp-action="AddOrUpdateWork">
                        <i class="ion ion-plus"></i> New
                    </a>
                </small>
            </label>
            <select asp-for="WorkId" asp-items="@ViewBag.WorkId" class="form-control"></select>
        </div>*@

        @*<div class="form-group">
            <label for="IgnoreDays" class="control-label">Exclude some days</label>
            <select name="IgnoreDays" id="IgnoreDays" asp-items="@ViewBag.IgnoreDays" class="form-control" multiple></select>
        </div>*@

        @*<div class="row">
            <div class="form-group col">
                <label asp-for="ShiftDurationStart" class="control-label">
                    Start Date
                </label>
                <input type="text" asp-for="ShiftDurationStart" value="@Model.ShiftDurationStart.ToString("dd-MMM-yyyy")" class="form-control has-datepicker" />
                <span asp-validation-for="ShiftDurationStart" class="text-danger"></span>
            </div>

            <div class="form-group col">
                <label asp-for="ShiftDurationEnd" class="control-label">End Date</label>
                <input type="text" asp-for="ShiftDurationEnd" value="@Model.ShiftDurationEnd.ToString("dd-MMM-yyyy")" class="form-control has-datepicker" />
                <span asp-validation-for="ShiftDurationEnd" class="text-danger"></span>
            </div>
        </div>*@

        <div class="row">
            @*<div class="form-group col">
                <label asp-for="MinHours" class="control-label">Minimum Hours</label>
                <input asp-for="MinHours" class="form-control" />
            </div>

            <div class="form-group col">
                <label asp-for="RecurringFrequency" class="control-label">Recurring</label>
                <select id="EmployeeId" asp-items="@Html.GetEnumSelectList<RecurringFrequency>()" class="form-control"></select>
            </div>*@
        </div>

        @*<div class="form-group">
            <label class="custom-control custom-checkbox">
                <input type="checkbox" asp-for="IsEffectiveImmediately" value="false" class="custom-control-input" tabindex="5">
                <span class="custom-control-label" for="chbxTerms">
                    TwoFactorEnabled
                </span>
            </label>
        </div>*@

        @*<div class="form-group">
            <label asp-for="UserName" class="control-label">User Name</label>
            <input asp-for="UserName" as class="form-control" />
            <span class="text-danger" asp-validation-for="UserName"></span>
        </div>
        <div class="form-group">
            <label asp-for="Email" class="control-label"></label>
            <input asp-for="Email" as class="form-control" /> @(Model?.EmailConfirmed ?? false ? "<i class='fa fa-check-circle'></i>" : "")
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="PhoneNumber" class="control-label">Phone Number</label>
            <input asp-for="PhoneNumber" as class="form-control" /> @(Model?.PhoneNumberConfirmed ?? false ? "<i class='fa fa-check-circle'></i>" : "")
            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="PasswordHash" class="control-label">Password</label>
            <input asp-for="PasswordHash" class="form-control" type="password" />
            <span asp-validation-for="PasswordHash" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="custom-control custom-checkbox">
                <input type="checkbox" asp-for="LockoutEnabled" value="false" class="custom-control-input" tabindex="5">
                <span class="custom-control-label" for="chbxTerms">
                    LockoutEnabled: @Model.LockoutEnd
                </span>
            </label>
        </div>


        <div class="form-group">
            <label class="custom-control custom-checkbox">
                <input type="checkbox" asp-for="TwoFactorEnabled" value="false" class="custom-control-input" tabindex="5">
                <span class="custom-control-label" for="chbxTerms">
                    TwoFactorEnabled
                </span>
            </label>
        </div>*@
    </main>
    <footer class="modal__footer">
        <button type="submit" class="modal__btn modal__btn-primary">Save</button>
        <button class="modal__btn" data-micromodal-close aria-label="Close this dialog window">Close</button>
    </footer>
</form>


<script>

    $(".has-datepicker").flatpickr({
        dateFormat: "j-M-Y"
    });
    
    $('.btn-make-off').click(function (e) {
        var makeOff = $(this).parent().prev().find('.form-control').attr('disabled');
        if (makeOff) {
            $(this).next().val(false);
            $(this).text('Off Day');
            $(this).parent().prev().find('.form-control').removeAttr('disabled');
            $(this).parent().prev().find('.select2-selection__choice').css('text-decoration', 'none');
        }
        else {
            $(this).next().val(true);
            $(this).text('Cancel Off')
            $(this).parent().prev().find('.form-control').attr('disabled', true);
            $(this).parent().prev().find('.select2-selection__choice').css('text-decoration', 'line-through');
        }

        $(this).toggleClass('btn-info btn-danger');
    })

    function format (option) {
			console.log(option);
			if (!option.id) { return option.text; }
			var ob = option.text + '<img height="30px" src="https://lh4.ggpht.com/wKrDLLmmxjfRG2-E-k5L5BUuHWpCOe4lWRF7oVs1Gzdn5e5yvr8fj-ORTlBF43U47yI=w64" />';	// replace image source with option.img (available in JSON)
			return ob;
		};

    $.fn.select2.amd.require(['select2/selection/search'], function (Search) {
        var oldRemoveChoice = Search.prototype.searchRemoveChoice;

        Search.prototype.searchRemoveChoice = function () {
            oldRemoveChoice.apply(this, arguments);
            this.$search.val('');
        };

        $('#EmployeeIds').select2({
            //width:'300px'
  		    placeholder: "Select employees",
            escapeMarkup: function (m) {
			    return m;
		    }
        });

        $('.work-ids').select2({
            //width:'300px'
            placeholder: "Choose works",
        });

        //$('#DepartmentId').select2({
        //    //width:'300px'
        //    placeholder: "Choose works",
        //});
        
        $('#EmployeeIds').on('select2:select', function (e) {
            var data = e.params.data;
            console.log(data);
        });
    });

     // $("#EmployeeIds").select2({
  		 //   placeholder: "Select employees",
	    //    // width: "50%",
     //       // allowClear: true,
	    //    //templateResult: format,
	    //    //templateSelection: function (option) {
	    //    //    if (option.id.length > 0 ) {
	    //    //        return option.text + "<i class='fa fa-dot-circle-o'></i>";
	    //    //    } else {
	    //    //        return option.text;
	    //    //    }
	    //    //},
     //     escapeMarkup: function (m) {
				 //   return m;
			  //  }
	    //});
</script>