@model Announcement
@{
    ViewData["Title"] = "Report - Gender Profile";

    var pie = (Dictionary<string, int>)ViewBag.Pie;
    var ByDept = (List<Tuple<string, int, int, int>>)ViewBag.ByDept;
}

<h2>Gender Report</h2>
<div class="row mt-8 mb-3">
    @*<div class="col-md-8">
        <span class="link-summary">
            @Model.Title <a class="text-muted " data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" asp-action="UploadImage" asp-route-id="@Model.Id" style="">
                <i class="fa fa-angle-down"></i>
            </a>
        </span>

    </div>
    <div class="col-md-4 text-right">

    </div>*@
</div>


<div id="chartdiv_pie" style="height:180px"></div>
<table class="table table-hover">
    <thead>
        <tr>
            <td>Name</td>
            <td>Count</td>
            <td>Percentage</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in pie)
        {
            <tr>
                <td>@item.Key</td>
                <td>@item.Value</td>
                <td>@((((decimal)item.Value / pie.Sum(a => a.Value)) * 100).ToString("N0"))%</td>
            </tr>
        }
    </tbody>
</table>

<hr />

<div id="chartdiv_bar" style="height:350px"></div>
<table class="table table-hover">
    <thead>
        <tr>
            <td>Department</td>
            <td>Male</td>
            <td>Female</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in ByDept)
        {
            <tr>
                <td>@item.Item1</td>
                <td>@item.Item2</td>
                <td>@item.Item3</td>
            </tr>
        }
    </tbody>
</table>



<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />


@section scripts {
    <!-- Resources -->
    <script src="https://www.amcharts.com/lib/4/core.js"></script>
    <script src="https://www.amcharts.com/lib/4/charts.js"></script>
    <script src="https://www.amcharts.com/lib/4/themes/animated.js"></script>

    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <script src="~/js/micro-charts.js"></script>
    <script>


        var data = [];
        @if (pie != null) {
            foreach (var item in pie)
            {
                <text>
            data.push({key: '@item.Key', value: '@item.Value'});
                </text>
            }
        }

        console.log('data', data);
        drawActionPie(data, "chartdiv_pie");

        
        var datadept = [];
        @if (ByDept != null) {
            foreach (var item in ByDept)
            {
                <text>
            datadept.push({dept: '@item.Item1', male: '@item.Item2', female: '@item.Item3'});
                </text>
            }
        }

        console.log('datadept', datadept);
        drawBarChart(datadept, "chartdiv_bar");

        function drawBarChart(data, chartDiv) {
            am4core.ready(function() {

                // Themes begin
                am4core.useTheme(am4themes_animated);
                // Themes end

                // Create chart instance
                var chart = am4core.create(chartDiv, am4charts.XYChart);

                // Add data
                chart.data = data

                chart.legend = new am4charts.Legend();
                chart.legend.position = "right";

                // Create axes
                var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
                categoryAxis.dataFields.category = "dept";
                categoryAxis.renderer.grid.template.opacity = 0;

                var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
                valueAxis.min = 0;
                valueAxis.renderer.grid.template.opacity = 0;
                valueAxis.renderer.ticks.template.strokeOpacity = 0.5;
                valueAxis.renderer.ticks.template.stroke = am4core.color("#495C43");
                valueAxis.renderer.ticks.template.length = 10;
                valueAxis.renderer.line.strokeOpacity = 0.5;
                valueAxis.renderer.baseGrid.disabled = true;
                valueAxis.renderer.minGridDistance = 40;

                // Create series
                function createSeries(field, name) {
                  var series = chart.series.push(new am4charts.ColumnSeries());
                  series.dataFields.valueX = field;
                  series.dataFields.categoryY = "dept";
                  series.name = name;
  
                      // Make it stacked
                      series.stacked = true;
  
                      // Configure columns
                      series.columns.template.width = am4core.percent(60);
                    series.columns.template.tooltipText = "[bold]{name}[/]\n[font-size:14px]{categoryY}: {valueX}";

                  var labelBullet = series.bullets.push(new am4charts.LabelBullet());
                  labelBullet.locationX = 0.5;
                  labelBullet.label.text = "{valueX}";
                  labelBullet.label.fill = am4core.color("#fff");
                }

                createSeries("male", "Male");
                createSeries("female", "Female");
                //createSeries("other", "Other");


                hidelogos();
            }); // end am4core.ready()

        }
    </script>

}
