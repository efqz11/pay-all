@model Announcement
@{
    ViewData["Title"] = "Report - Gender Profile";

    var pie = (Dictionary<string, int>)ViewBag.Pie;
    var ByGender = (List<Tuple<string, int, int>>)ViewBag.ByGender;
}

<h2>Age Profile</h2>
<div class="row mt-8 mb-3">
    @*<div class="col-md-8">
        <span class="link-summary">
            @Model.Title <a class="text-muted " data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" asp-action="UploadImage" asp-route-id="@Model.Id" style="">
                <i class="fa fa-angle-down"></i>
            </a>
        </span>

    </div>
    <div class="col-md-4 text-right">

    </div>*@
</div>


<div id="chartdiv_pie" style="height:250px"></div>
<table class="table table-hover">
    <thead>
        <tr>
            <td>Name</td>
            <td>Count</td>
            <td>Percentage</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in pie)
        {
            <tr>
                <td>@item.Key</td>
                <td>@item.Value</td>
                <td>@((((decimal)item.Value / pie.Sum(a => a.Value)+1) * 100 + 1).ToString("N0"))%</td>
            </tr>
        }
    </tbody>
</table>

<hr />

<div id="chartdiv_bar" style="height:350px"></div>
<table class="table table-hover">
    <thead>
        <tr>
            <td>AgeGroup</td>
            <td>Male</td>
            <td>Female</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in ByGender)
        {
            <tr>
                <td>@item.Item1</td>
                <td>@item.Item2</td>
                <td>@item.Item3</td>
            </tr>
        }
    </tbody>
</table>



<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />


@section scripts {
    <!-- Resources -->
    <script src="https://www.amcharts.com/lib/4/core.js"></script>
    <script src="https://www.amcharts.com/lib/4/charts.js"></script>
    <script src="https://www.amcharts.com/lib/4/themes/animated.js"></script>

    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <script src="~/js/micro-charts.js"></script>
    <script>


        var data = [];
        @if (pie != null) {
            foreach (var item in pie)
            {
                <text>
            data.push({key: '@item.Key', value: '@item.Value'});
                </text>
            }
        }

        console.log('data', data);
        drawActionPie(data, "chartdiv_pie");

        
        var datadept = [];
        @if (ByGender != null) {
            foreach (var item in ByGender)
            {
                <text>
            datadept.push({dept: '@item.Item1', male: '@item.Item2', female: '@item.Item3'});
                </text>
            }
        }

        console.log('datadept', datadept);
        drawBarChart(datadept, "chartdiv_bar");

        function drawBarChart(data, chartDiv) {
            am4core.ready(function() {

                // Themes begin
                am4core.useTheme(am4themes_animated);
                // Themes end


                var chart = am4core.create(chartDiv, am4charts.XYChart)
                chart.colors.step = 2;

                chart.legend = new am4charts.Legend()
                chart.legend.position = 'top'
                chart.legend.paddingBottom = 20
                chart.legend.labels.template.maxWidth = 95

                var xAxis = chart.xAxes.push(new am4charts.CategoryAxis())
                xAxis.dataFields.category = 'dept'
                xAxis.renderer.cellStartLocation = 0.1
                xAxis.renderer.cellEndLocation = 0.9
                xAxis.renderer.grid.template.location = 0;

                var yAxis = chart.yAxes.push(new am4charts.ValueAxis());
                yAxis.min = 0;

                function createSeries(value, name) {
                    var series = chart.series.push(new am4charts.ColumnSeries())
                    series.dataFields.valueY = value
                    series.dataFields.categoryX = 'dept'
                    series.name = name

                    series.events.on("hidden", arrangeColumns);
                    series.events.on("shown", arrangeColumns);
                    series.columns.template.tooltipText = "[bold]{name}[/]\n[font-size:14px]{categoryX}: {valueY}";

                    var bullet = series.bullets.push(new am4charts.LabelBullet())
                    bullet.interactionsEnabled = false
                    bullet.dy = 30;
                    bullet.label.text = '{valueY}'
                    bullet.label.fill = am4core.color('#ffffff')

                    return series;
                }

                chart.data = data;


                createSeries('male', 'Male');
                createSeries('female', 'Female');

                function arrangeColumns() {

                    var series = chart.series.getIndex(0);

                    var w = 1 - xAxis.renderer.cellStartLocation - (1 - xAxis.renderer.cellEndLocation);
                    if (series.dataItems.length > 1) {
                        var x0 = xAxis.getX(series.dataItems.getIndex(0), "categoryX");
                        var x1 = xAxis.getX(series.dataItems.getIndex(1), "categoryX");
                        var delta = ((x1 - x0) / chart.series.length) * w;
                        if (am4core.isNumber(delta)) {
                            var middle = chart.series.length / 2;

                            var newIndex = 0;
                            chart.series.each(function (series) {
                                if (!series.isHidden && !series.isHiding) {
                                    series.dummyData = newIndex;
                                    newIndex++;
                                }
                                else {
                                    series.dummyData = chart.series.indexOf(series);
                                }
                            })
                            var visibleCount = newIndex;
                            var newMiddle = visibleCount / 2;

                            chart.series.each(function (series) {
                                var trueIndex = chart.series.indexOf(series);
                                var newIndex = series.dummyData;

                                var dx = (newIndex - trueIndex + middle - newMiddle) * delta

                                series.animate({ property: "dx", to: dx }, series.interpolationDuration, series.interpolationEasing);
                                series.bulletsContainer.animate({ property: "dx", to: dx }, series.interpolationDuration, series.interpolationEasing);
                            })
                        }
                    }
                }

            }); // end am4core.ready()

        }
    </script>

}
