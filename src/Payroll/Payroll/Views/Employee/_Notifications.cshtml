@model HomeEmployeeVm
@inject UserResolverService userrServiec
@{

    var startDate = (DateTime)ViewBag.Start;
    var endDate = (DateTime)ViewBag.End;
    var durationText = (string)ViewBag.DurationText;
    var emp = (Employee)ViewBag.Employee;
}

<div class="card" style="">

    <!--Card Header-->
    <div class="card-header">
        <form asp-action="ViewNotifications" asp-controller="Employee" id="filterForm" data-ajax-begin="convertToLoadingTable('#table-rquests')" data-ajax="true" data-ajax-update="#employee-content">
            <input type="hidden" name="start" id="start" value="@Model.FilterForm.Start" />
            <input type="hidden" name="end" id="end" value="@Model.FilterForm.End" />
            <input type="hidden" name="id" id="id" value="@Model.EmployeeUserId" />
            @*<input type="hidden" name="showSeen" id="showSeen" value="@Model.FilterForm.ShowSeen" />*@
            <span class="title">My Notifications</span>
            <div class="p-actions mb-0 float-right">

                    <div class="btn-toolbar float-right" role="group" aria-label="Toolbar with button groups">
                        <div class="btn-group mr-2 btn-group-toggle actions" data-toggle="buttons">
                            <label class="btn btn-sm btn-outline-secondary @(Model.FilterForm.ShowSeen ? "active" :"")">
                                <i class="fa fa-eye"></i> <input type="checkbox" name="showSeen" id="showSeen" value="@(Model.FilterForm.ShowSeen ? "True" :"False")" autocomplete="off" onchange="onCheckChange(this);submitForm()">
                            </label>
                        </div>

                        <div class="btn-group mr-2" role="group" id="datefilter" aria-label="First group">
                            <button type="button" class="btn-sm btn btn-outline-secondary border-right-0 " style="outline:none;border-top-left-radius: 0.2rem;border-bottom-left-radius: 0.2rem"><i class="fa fa-calendar-alt"></i></button>
                            <button type="button" class="btn-sm btn btn-outline-secondary border-right-0 border-left-0" id="textBtn">@durationText</button>
                            <button type="button" class="btn-sm btn btn-outline-secondary border-left-0" style="outline:none "><i class="fa fa-chevron-down"></i></button>
                        </div>

                        <div class="btn-group mr-2" role="group" aria-label="Third group">
                            <select class="form-control form-control-sm" name="limit" id="limit" onchange="submitForm()">
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                            </select>
                        </div>
                        <div class="btn-group" role="group" aria-label="Third group">
                            <select asp-items="@ViewBag.NotificationTypes" class="form-control form-control-sm" name="type" id="type" onchange="submitForm()">
                                <option value="0" selected>Show All</option>
                            </select>
                        </div>
                    </div>
                </div>
        </form>
    </div>

    <div class="card-body">
        <div id="main-area" style="min-height:500px">

            <span class="link-summary d-flex mb-2">
                @foreach (var item in userrServiec.GetEmployeeRoles())
                {
                    <span class="src btn-sm btn btn-outline-secondary mr-2 active" data-target="@item">
                        <span class="d-flex ">
                            <span class="mr-2"><i class="fa fa-user-shield"></i></span>   @item
                        </span>
                    </span>
                }
            </span>

            <partial name="~/Views/Notification/_Listing.cshtml" model="Model.Notifications">
        </div>
    </div>

</div>





<script>
    $('#datefilter').daterangepicker({
        autoUpdateInput: false,
        locale: {
            cancelLabel: 'Clear'
        },
        opens: 'left',

        ranges: {
            'This Week': [moment().startOf('week'), moment().endOf('week')],
            'Last Week': [moment().subtract(1, 'week').startOf('week'), moment().subtract(1, 'week').endOf('week')],
            'Last 30 Days': [moment().subtract(29, 'days'), moment()],
            'This Month': [moment().startOf('month'), moment().endOf('month')],
            'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
        }
    });

    var start = '@startDate.ToString("MM/dd/yyyy")';
    var end = '@endDate.ToString("MM/dd/yyyy")';
    console.log(start, end, 'start-end');
    console.log(start !== "" && end !== "");
    if (start !== "" && end !== "") {
        $('#datefilter').data('daterangepicker').setStartDate(start);
        $('#datefilter').data('daterangepicker').setEndDate(end);
    }


    $('#datefilter').on('apply.daterangepicker', function (ev, picker) {
        console.log(picker);
        var days = picker.endDate.diff(picker.startDate, 'days');
        if (days <= 0)
            $(this).find('#textBtn').val(picker.startDate.format('ddd, MMM DD, YYYY'));
        else
            $(this).find('#textBtn').val(picker.startDate.format('MMM DD') + ' - ' + picker.endDate.format('DD, YYYY') + " (" + days + " days)");

        // 1/10/2020 12:34:32 PM
        $('#start').val(picker.startDate.format('MM/DD/YYYY HH:mm:ss'));
        $('#end').val(picker.endDate.format('MM/DD/YYYY HH:mm:ss'));

        submitForm();
    });

    function submitForm() {
        $('#filterForm').submit();
    }

    function setSeenValue(e) {
        //$('#showSeen').val($(e).is(':checked'));
        submitForm();
    }

    $('input[name="datefilter"]').on('cancel.daterangepicker', function (ev, picker) {
        $(this).val('');
    });

</script>