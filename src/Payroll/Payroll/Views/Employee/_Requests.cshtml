
@model List<Request>
@inject Payroll.Database.PayrollDbContext dbContext
@{
    var startDate = (DateTime?)ViewBag.Start;
    var endDate = (DateTime?)ViewBag.End;
    var durationText = (string)ViewBag.DurationText;
}

<style>
    div.counts .wrapper i.ion,
    div.counts .wrapper i.fa,
    div.counts .wrapper svg {
        opacity: 0.3;
        font-size: 3.3rem;
        position: absolute;
        top: -2px;
        left: -3px;
    }
</style>
<div class="card">

    <!--Card Header-->
    <div class="card-header">
        <span class="title " style="">Request History</span>

        <div class="p-actions mb-0 float-right">

                <form asp-action="Requests" asp-controller="Employee" data-ajax-begin="convertToLoadingTable('#table-rquests')" data-ajax="true" data-ajax-update="#employee-content" id="requestFilterForm">
                    <input type="hidden" name="start" id="start" value="@startDate" />
                    <input type="hidden" name="end" id="end" value="@endDate" />
                    <input type="hidden" name="type" id="type" />
                    <div class="btn-toolbar float-right" role="toolbar" aria-label="Toolbar with button groups">

                        <div class="btn-group mr-2" role="group" aria-label="First group">
                            <select class="form-control form-control-sm" name="status" id="status" onchange="submitForm()">
                                <option value="">All Status</option>
                                <option value="0">Draft</option>
                                <option value="1">Submitted</option>
                                <option value="2">Approved</option>
                                <option value="3">Rejected</option>
                            </select>
                        </div>

                        <div class="btn-group mr-2" role="group" aria-label="Second group">
                            <a asp-action="Requests" asp-controller="Employee" id="hidd" data-ajax-begin="convertToLoadingTable('#table-rquests')" data-ajax="true" data-ajax-update="#employee-content" class="btn-sm btn btn-outline-secondary border-right-0" style="display:none"><i class="ion ion-arrow-left-c"></i></a>

                            @*<select class="form-control form-control-sm mr-2" name="reqType" id="reqType" asp-items="@Html.GetEnumSelectList<RequestType>()">
                                <option value="0">All Types</option>
                            </select>*@
                            <button type="button" class="btn-sm btn btn-outline-secondary border-right-0 " style="outline:none;border-top-left-radius: 0.2rem;border-bottom-left-radius: 0.2rem"><i class="fa fa-calendar-alt"></i></button>
                            <button type="button" class="btn-sm btn btn-outline-secondary border-right-0 border-left-0" id="textBtn">@durationText</button>
                            <button type="button" class="btn-sm btn btn-outline-secondary border-left-0" id="datefilter" style="outline:none "><i class="fa fa-chevron-down"></i></button>
                        </div>

                        <div class="btn-group" role="group" aria-label="Third group">
                            <a class="btn btn-sm btn-primary" asp-action="NewRequest" asp-route-id="@ViewBag.id" asp-controller="Request" data-ajax-method="GET" data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" data-ajax-failure="HandleModalPostFailure"><i class="fad fa-plus-circle"></i> New Request</a>
                        </div>
                    </div>

                </form>
            </div>
    </div>

    <div class="card-body">
        <div id="main-area">
                <div class="row counts mt-2">
                    <div class="col-md-2">
                        <div class="wrapper">
                            <div class="top text-center">
                                <a href="#" data-type="@RequestType.Leave" style="" class="type-filter">
                                    <div class="bg-light border-0 pt-4 pb-4 text-center">
                                        <h5 class="pb">@Model.Count(a => a.RequestType == RequestType.Leave)</h5>
                                        <partial name="~/Views/Request/_DisplayRequestTypeOnly.cshtml" model="RequestType.Leave" />
                                    </div>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="wrapper">
                            <div class="top text-center">
                                <a href="#" data-type="@RequestType.Overtime" class="type-filter">
                                    <div class="bg-light border-0 pt-4 pb-4 text-center">
                                        <h5 class="pb">@Model.Count(a => a.RequestType == RequestType.Overtime)</h5>
                                        <partial name="~/Views/Request/_DisplayRequestTypeOnly.cshtml" model="RequestType.Overtime" />
                                    </div>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="wrapper">
                            <div class="top text-center">
                                <a href="#" data-type="@RequestType.Document" class="type-filter">
                                    <div class="bg-light border-0 pt-4 pb-4 text-center">
                                        <h5 class="pb">@Model.Count(a => a.RequestType == RequestType.Document)</h5>
                                        <partial name="~/Views/Request/_DisplayRequestTypeOnly.cshtml" model="RequestType.Document" />
                                    </div>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="wrapper">
                            <div class="top text-center">
                                <a href="#" data-type="@RequestType.Emp_DataChange" class="type-filter">
                                    <div class="bg-light border-0 pt-4 pb-4 text-center">
                                        <h5 class="pb">@Model.Count(a => a.RequestType == RequestType.Emp_DataChange)</h5>
                                        <partial name="~/Views/Request/_DisplayRequestTypeOnly.cshtml" model="RequestType.Emp_DataChange" />
                                    </div>
                                </a>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="wrapper">
                            <div class="top text-center">
                                <a href="#" data-type="@RequestType.Work_Submission" class="type-filter">
                                    <div class="bg-light border-0 pt-4 pb-4 text-center">
                                        <h5 class="pb">@Model.Count(a => a.RequestType == RequestType.Work_Submission)</h5>
                                        <partial name="~/Views/Request/_DisplayRequestTypeOnly.cshtml" model="RequestType.Work_Submission" />
                                    </div>
                                </a>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="wrapper">
                            <div class="top text-center">
                                <a href="#" data-type="@RequestType.Work_Change" class="type-filter">
                                    <div class="bg-light border-0 pt-4 pb-4 text-center">
                                        <h5 class="pb">@Model.Count(a => a.RequestType == RequestType.Work_Change)</h5>
                                        <partial name="~/Views/Request/_DisplayRequestTypeOnly.cshtml" model="RequestType.Work_Change" />
                                    </div>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

            <table class="table mt-3" id="table-rquests">
                <thead>
                    <tr>
                        <th></th>
                        <th>Type</th>
                        <th>Details</th>
                        <th>Status</th>
                        <th>Owner</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model)
                    {
                        <tr data-id="@item.Id" class="item-@item.Id type_@item.RequestType">
                            <td>
                                <h5>
                                    <a class="" asp-action="ViewRequest" asp-controller="Request" asp-route-id="@item.Id" asp-route-type="@item.RequestType" data-ajax-method="GET" data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" data-ajax-failure="handleModalPostFailure">
                                        @item.NumberFormat
                                    </a>
                                </h5>
                            </td>
                            <td>
                                <partial name="~/Views/Request/_DisplayRequestType.cshtml" model="@item" />
                            </td>
                            <td>
                                @if (item.RequestType == RequestType.Attendance_Change || item.RequestType == RequestType.Work_Change)
                                {
                                    <small>
                                        @if (item.IsTransferEmployee == false)
                                        {
                                            @(item.Attendance?.DurationCheckin ?? item.WorkItem?.DurationCheckin)
                                            <i class="fa fa-arrow-right"></i>
                                            @item.GetNewCheckInCheckOutDuration(User)
                                        }
                                        else
                                        {
                                            @("Transfer to " + item.TransferredEmployeeName)
                                        }
                                    </small>
                                }
                                @if (item.RequestType == RequestType.Emp_DataChange)
                                {
                                    <p class="mb-1">
                                        @item.DataChangesCount field(s)
                                    </p>
                                }
                                @if (item.RequestType == RequestType.Leave)
                                {
                            <p class="mb-1">
                                @item.GetRequestedDuration()
                                @if (item.AttendanceId.GetValueOrDefault() > 0)
                                {
                                    <span>@item.TotalHours.GetHourMinString()</span>
                                }
                                else
                                {
                                    @Html.Raw(item.GetTotalDaysStringInfo())
                                }
                            </p>
                                }
                                @if (item.RequestType == RequestType.Overtime)
                                {
                                    <p class="mb-1">
                                        @item.GetRequestedDuration()
                                        <br>
                                        @item.Duration
                                    </p>
                                }
                                @if (item.RequestType == RequestType.Document && item.DocumentsData != null)
                                {
                                    <span>
                                        @item.Reason.LimitTo(50)
                                    </span>
                                    <br />
                                    <small class="text-muted" style="line-height:-4">@Html.Raw(string.Join("<br>", item.DocumentsData))</small>

                                    @*<span class="text-muted">@string.Join(" · ", item.DocumentsData)</span>
                                <br />
                                <small>
                                    @item.Reason
                                </small>*@
                                }
                                @if (item.FileDatas.Any())
                                {
                                    <a class="" asp-action="UploadDocument" asp-controller="Request" asp-route-id="@item.Id" data-ajax-method="GET" data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" data-ajax-failure="HandleModalPostFailure">
                                        <i class="fas fa-file"></i> Files (@item.FileDatas.Count())
                                    </a>
                                }
                            </td>
                            <td><partial name="_DisplayRequestStatus" model="@item.Status" /></td>
                            <td>
                            <a asp-route-id="@dbContext.Entry(item).Property(AuditFileds.CreatedById).CurrentValue" asp-action="Detail" asp-controller="AppUser" target="_blank">
                                @dbContext.Entry(item).Property(AuditFileds.CreatedByName).CurrentValue
                            </a>
                            <br />
                            <small class="text-muted">@(((DateTime)dbContext.Entry(item).Property("ModifiedDate").CurrentValue).ToSystemFormat(User, true))</small></td>
                        </tr>
                    }
                </tbody>

                @if (Model.Any() == false)
                {
                    <tfoot>
                        <tr>
                            <td colspan="5" class="text-center text-lead">No Request found during @startDate.GetDuration(endDate, User, false)</td>
                        </tr>
                    </tfoot>
                }
            </table>

        </div>
    </div>
</div>
<script>
    var status = '@ViewBag.Status';
    console.log(status);
    if (status)
        $("#status option:contains(" + status + ")").attr('selected', true);

    $('a.type-filter').click(function (e) {
        e.preventDefault();
        e.stopImmediatePropagation();

        var thisWrapper = $(this).parents('.wrapper');
        

        $(thisWrapper).addClass('active');
        $('.wrapper').not(thisWrapper).removeClass('active');

        var type = $(this).data('type');
        console.log(type);
        $('table#table-rquests').find('tr').hide();
        $('table#table-rquests').find('tr.type_' + type).fadeIn();

        //$('#type').val($(this).data('type'));

        //$('#requestFilterForm').submit();
    })

    $('#datefilter').daterangepicker({
        autoUpdateInput: false,
        showDropdowns: true,
        locale: {
            cancelLabel: 'Clear'
        },
        opens: 'left',

        ranges: {
            'This Week': [moment().startOf('week'), moment().endOf('week')],
            'Last Week': [moment().subtract(1, 'week').startOf('week'), moment().subtract(1, 'week').endOf('week')],
            'Last 30 Days': [moment().subtract(29, 'days'), moment()],
            'This Month': [moment().startOf('month'), moment().endOf('month')],
            'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
        }
    });

    var start = '@startDate?.ToString("MM/dd/yyyy")';
    var end = '@endDate?.ToString("MM/dd/yyyy")';
    console.log(start, end, 'start-end');
    console.log(start !== "" && end !== "");
    if (start !== "" && end !== "") {
        $('#datefilter').data('daterangepicker').setStartDate(start);
        $('#datefilter').data('daterangepicker').setEndDate(end);
    }


    $('#datefilter').on('apply.daterangepicker', function (ev, picker) {
        console.log(picker);
        var days = picker.endDate.diff(picker.startDate, 'days');
        if (days <= 0)
            $(this).parent().find('#textBtn').val(picker.startDate.format('ddd, MMM DD, YYYY'));
        else
            $(this).parent().find('#textBtn').val(picker.startDate.format('MMM DD') + ' - ' + picker.endDate.format('DD, YYYY') + " (" + days + " days)");

        // 1/10/2020 12:34:32 PM
        $('#start').val(picker.startDate.format('MM/DD/YYYY HH:mm:ss'));
        $('#end').val(picker.endDate.format('MM/DD/YYYY HH:mm:ss'));

        submitForm();
    });

    function submitForm() {

        $('#requestFilterForm').submit();
    }

    $('input[name="datefilter"]').on('cancel.daterangepicker', function (ev, picker) {
        $(this).val('');
    });

</script>