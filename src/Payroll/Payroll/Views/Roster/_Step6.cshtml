@model RosterVm

@{
    var workIndx = 0;
}
@{
    Layout = "_LayoutCard";
    ViewBag.CardHeader = Model.Status != ScheduleStatus.Draft ? "Schedule was generated on " + Model.RosterGeneratedDate.ToLocalFormat(true)  : "Create New Roster";
    ViewBag.RosterVm = Model;
    DayOfWeek weekStartDay = (DayOfWeek)Model.CompanyWorkStartDay;
}


@*@if (Model.IsRoseterGenerated == false)
{

    <div class="p-4 text-center">

        <a data-ajax-update="#card-placeholder" class="btn btn-info btn-lg " asp-action="StartRosteringDone" asp-route-id="@Model.ScheduleId" asp-controller="Roster" data-ajax-method="POST" data-ajax="true" data-ajax-failure="handleModalPostFailure" data-ajax-success="sendNotification('success', '.Name was just removed')"><i class="fa fa-grip-horizontal"></i> Generate</a>
        <span class=" mt-3" id="loader-placeHolder"></span>


        <h4 class="text-center mb-4 mt-3" style="font-weight:400">Click to generate new Roster</h4>
    </div>
}
else*@

    <div class="row mb-2">
        <div class="col-md-4">
            <div class="form-group" style="">
                <div class="search-wrapper">
                    <div class="form-group has-search mb-1">
                        <span class="form-control-feedback"><i class="fad fa-search"></i></span>
                        <input type="text" class="form-control-sm form-control float-left mt-1 txt-search-weekly " placeholder="Search by employee name or department..." name="query">
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="btn-toolbar float-right" role="toolbar" aria-label="Toolbar with button groups">
                <div class="btn-group mr-2" role="group" aria-label="First group">
                    <button type="button" class="btn-sm btn btn-outline-secondary" onclick="$('.item-t').toggle(); $(this).toggleClass('active')"><i class="fa fa-tasks"></i></button>
                </div>
                <div class="btn-group mr-2" role="group" aria-label="First group">
                    <a asp-action="ClearRosterGenereatedItems" data-ajax-begin="convertToLoadingTable('.table-schedule');openLoadingModal('Clearing Schedule', 'Removing all Tasks and Attendance Records created from this schedule')" asp-route-id="@Model.ScheduleId" data-ajax="true" data-ajax-update="#card-placeholder" data-ajax-method="POST" class="btn-sm btn btn-outline-secondary border-right-0" data-ajax-success="hideSuccessLoadingModal()" data-ajax-failure="hideFailedLoadingModal" data-ajax-confirm="This action will clear all schedules"><i class="fa fa-minus-circle"></i></a>
                    <button type="button" id="datefilter" class="btn-sm btn btn-outline-secondary border-left-0 border-right-0">@ViewBag.CurrentRangeDisplay</button>
                    <a asp-action="StartRosteringDone" data-ajax-begin="convertToLoadingTable('.table-schedule');openLoadingModal('Creating Roster', 'Creating Attendance and Task records for @Model.EmployeeIds.Count() employees from @Model.StartDate.ToLocalFormat() to @Model.EndDate.ToLocalFormat()')" asp-controller="Roster" data-ajax-method="POST" asp-route-id="@Model.ScheduleId" data-ajax="true" data-ajax-update="#card-placeholder" class="btn-sm btn btn-outline-secondary border-left-0" title="Click to re-create schedule" data-ajax-success="hideSuccessLoadingModal()" data-ajax-failure="hideFailedLoadingModal" data-ajax-confirm="This action will remove old records and re-create new records based on your roster configuration"><i class="fa fa-grip-horizontal"></i></a>
                </div>

                @if (Model.Status != ScheduleStatus.Draft)
                {

                    <div class="btn-group mr-2" role="group" aria-label="Second group">
                        <a asp-action="GetShiftDetails" asp-route-id="@Model.ScheduleId" data-ajax-method="GET" data-ajax-begin="convertToLoadingTable('.table-schedule')" data-ajax="true" data-ajax-update="#card-placeholder" class="btn-sm btn btn-outline-info border-right-0"><i class="ion ion-levels"></i></a>
                        <button type="button" id="datefilter" class="btn-sm btn btn-outline-info border-left-0 border-right-0">@ViewBag.CurrentRangeDisplay</button>
                        <a asp-action="GetTaskDetails" asp-route-id="@Model.ScheduleId" data-ajax-method="GET" data-ajax-begin="convertToLoadingTable('.table-schedule')" data-ajax="true" data-ajax-update="#card-placeholder" class="btn-sm btn btn-outline-info border-left-0"><i class="ion ion-levels"></i></a>
                    </div>

                    <div class="btn-group mr-2" role="group" aria-label="Third group">
                        <a class="btn btn-sm btn-outline-success" asp-action="ViewInteractions" asp-route-id="@Model.ScheduleId" data-ajax-method="POST" data-ajax="true" data-ajax-failure="handleModalPostFailure" data-ajax-update=".modal__container" data-ajax-success="" data-ajax-begin="showModal()"><i class="fa fa-comment-dots"></i></a>
                    </div>
                }
                <div class="btn-group" role="group" aria-label="Third group">
                    @*<a class="btn btn-sm btn-outline-primary" asp-action="AddOrUpdateSchedule" data-ajax-method="GET" data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" data-ajax-failure="HandleModalPostFailure"><i class="ion ion-plus"></i> Add Schedule</a>*@
                    @*<button type="button" class="btn btn-sm btn-primary"></button>*@
                </div>
            </div>
        </div>
    </div>

    @if (Model.Status != ScheduleStatus.Draft)
    {
    <div id="weekly-schedule-table-container">
        <table class="table table-schedule" id="weekly-table11">
            <tbody>

                <tr id="">
                    <th class="text-left sticky-col first-col" style="z-index: 1">
                        <h6 class="">Employeee / Days</h6>
                    </th>

                    @for (var start = Model.StartDate; start <= Model.EndDate; start = start.AddDays(1))
                    {

                        <td class="@(start.Date == DateTime.Now.Date ? "active" : "") @(start.DayOfWeek == weekStartDay ? "prova" : "") text-center" data-ribbon=" @(start.DayOfWeek == weekStartDay ? "★" : "")">
                            <div class="text-left font-weight-bold" style=" vertical-align: middle;display:inline-flex">
                                @*<img src="/img/default-image.png" height="40" class="mt-1 pr-2">*@

                                @*@if (start.DayOfWeek == weekStartDay)
                                    {
                                        <div class="badge badge-danger">Week</div>
                                    }*@
                                <h3 class="mt-1 pr-1">@start.Day</h3>
                                <div class="name-display pl-1" style="font-size: 11px;padding-top: 4px;">
                                    <span class="">@start.ToString("ddd").ToUpper()</span>
                                    <br>
                                    <small style="position: relative;top: -4px;">@start.ToString("MMM").ToString()</small>
                                </div>
                            </div>
                        </td>
                        
                        @*<td class="@(start.Date == DateTime.Now.Date ? "active" : "")">
                                <div class="row">
                                    @if (start.DayOfWeek == weekStartDay)
                                    {
                                        <div class="badge">Week</div>
                                    }
                                    <div class="col pl-2 text-right">
                                        <h2>@start.Day</h2>
                                    </div>
                                    <div class="col text-left pl-0">
                                        <small>@start.ToString("ddd").ToUpper()</small>
                                        <div class="clearfix"></div>
                                        <small class="text-muted">@start.ToString("MMM").ToString()</small>
                                    </div>
                                </div>
                            </td>*@
                    }
                    <td></td>
                </tr>

                @foreach (var item in Model.WeekEmployeeShift)
                {
                    <tr>
                        <td class="text-left font-weight-bold sticky-col first-col" style=" vertical-align: middle;display:flex">
                            <div class="image-container">
                                <a asp-controller="Employee" asp-action="Detail" asp-route-id="@item.Employee.Id">
                                    <img src="@Url.Content(item.Employee.Avatar ?? DefaultPictures.default_user)" height="35" class="mt-1 mr-2 rounded-circle" />
                                </a>
                            </div>
                            <a asp-controller="Employee" asp-action="Detail" asp-route-id="@item.Employee.Id">
                                <div class="name-display pt-1">
                                    <span class="">@item.Employee.GetSystemName(User)</span>
                                    <br>
                                    @*@(Model.Employees.FirstOrDefault(a => a.id == item.Employee.Id)?._PatternStartIndex) - @(Model.Employees.FirstOrDefault(a => a.id == item.Employee.Id)?._PatternEndIndex)*@
                                    <small class="text-muted" style="position: relative;top: -4px;">@(Model.Employees.FirstOrDefault(a => a.id == item.Employee.Id)?.Designation ?? "No Designation") @*&middot; @item.Employee.Department.Name*@
                                    
                                    @*@if (Model.Employees.FirstOrDefault(a => a.id == item.Employee.Id)?.ContractActive ?? false)
                                    {
                                        <i class="fa fa-signature text-info" title="@Model.Employees.FirstOrDefault(a => a.id == item.Employee.Id)?.ContractDuration"></i>
                                    }
                                    else
                                    {
                                        <i class="fa fa-exclamation-circle text-warning" title="No Contract was not found for employee"></i>
                                    }*@
                                    </small>
                                </div>
                            </a>
                        </td>


                        @*@item.Attendances.Count*@
                        @for (var start = Model.StartDate; start <= Model.EndDate; start = start.AddDays(1))
                        {
                        <td class="text-left cell-attndance">
                            @if (item.Attendances.Any(x => x.Date.Date == start.Date))
                            {
                                foreach (var attn in @item.Attendances.Where(x => x.Date.Date == start.Date))
                                {
                            <div class="item-X">
                                <div class="item item-@attn.Id @attn.ShiftColor  @(attn.IsOvertime ? "overtime" : "") @(start >= DateTime.Now.Date ? "active" : "")" onclick="$(this).next().click()">
                                    <small>
                                        <span>
                                            @if (attn.IsOvertime)
                                            {
                                                <i class="fa fa-hourglass-start"></i>
                                            }
                                            @(attn.IsOvertime ? "Overtime" : @attn.ShiftColor)

                                            @*@Html.Raw(attn.CurrentStatus != AttendanceStatus.Created ? @attn.StatusString : "")*@
                                        </span>
                                        @*@item.Attendances.First(x => x.Date == start.Date).CompanyWorkType*@
                                        <br />
                                        @*@attn.Duration*@
                                    </small>
                                </div>
                                <a asp-action="ViewAttendance" asp-controller="Schedule" asp-route-id="@attn.Id" data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" aria-label="Change attendance record" role="tooltip" data-microtip-position="top" class="hide" style="display:none">
                                    XX
                                </a>
                            </div>
                                }
                                //var attn = @item.Attendances.First(x => x.Date == start.Date);

                            }

                            @if (item.WorkItems.Any(x => x.Date == start.Date))
                            {
                                foreach (var attn in item.WorkItems.Where(x => x.Date == start.Date))
                                {
                                    <div class="item item-t @attn.WorkId" onclick="$(this).next().click()" style="display:none">
                                        <small>
                                            <span>
                                                @(attn.WorkName)
                                            </span>
                                        </small>
                                    </div>
                                    <a asp-action="ViewWorkItem" asp-controller="Schedule" asp-route-id="@attn.Id" asp-route-date="@start" data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" aria-label="Change attendance record" role="tooltip" data-microtip-position="top" class="hide" style="display:none">
                                        XX
                                    </a>
                                }
                                //var attn = @item.WorkItems.First(x => x.Date == start.Date);
                            }


                            @if (!item.Attendances.Any(x => x.Date.Date == start.Date))
                            {
                                <div class="item empty item-X" onclick="$(this).next().click()">
                                    <small>
                                        Off
                                        <br />
                                        <span>&nbsp;</span>
                                    </small>
                                </div>
                                <a class="text-muted" asp-action="AddOrUpdateSchedule" asp-route-onDate="@start" asp-route-empId="@item.Employee.Id" data-ajax-method="GET" data-ajax="true" data-ajax-update=".modal__container" data-ajax-begin="showModal()" data-ajax-failure="HandleModalPostFailure" style="display:none"><i class="ion ion-plus"></i> Add </a>
                            }

                        </td>
                        }

                        <td style="vertical-align: middle;">
                            @foreach (var inteRaction in Model.Notifications.Where(a => a.ActionTakenUserId == item.Employee.UserId))
                            {
                                @if (inteRaction.IsRead)
                                {
                                    <span><i class="fad fa-check-circle text-success"></i></span>
                                }
                                else
                                {
                                    <a asp-action="NotificationApproved" asp-controller="Notification" asp-route-id="@inteRaction.Id" asp-route-approve="1" data-ajax="true" data-ajax-method="GET" data-ajax-update=".modal__container" data-ajax-begin="" title="Mark as approved" class="btn btn-sm btn-outline-danger" style="" data-ajax-success="$(this).fadeOut();sendNotification('success', 'Interaction was just approved');">
                                        <i class="fas fa-exclamation-triangle"></i>
                                    </a>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    }
    else
    {
        <div class="p-5 text-center">
            <h5>Roster is not generated yet!</h5>
            <h5 class="mb-0">
                <a asp-action="StartRosteringDone" data-ajax-begin="openLoadingModal('Creating Roster', 'Creating Attendance and Task records for @Model.EmployeeIds.Count() employees from @Model.StartDate.ToLocalFormat() to @Model.EndDate.ToLocalFormat()')" asp-controller="Roster" data-ajax-method="POST" asp-route-id="@Model.ScheduleId" data-ajax-success="hideSuccessLoadingModal()" data-ajax-failure="hideFailedLoadingModal" data-ajax-confirm="This action will create new roster sheet for the set configurations" data-ajax="true" data-ajax-update="#card-placeholder" class="btn-lg btn btn-primary" title="Click to re-create schedule"><i class="fad fa-grip-horizontal"></i> Generate</a>
            </h5>
        </div>
    }


<div class="card-footer ">
    <div class="btn-toolbar float-right">
        <a class="btn btn-lg btn-light " asp-action="Process" asp-route-id="@Model.ScheduleId" asp-route-t="5" data-ajax="true" data-ajax-failure="handleModalPostFailure" data-ajax-update="#card-placeholder" data-ajax-success="setActiveTabByIndex(5)" ><i class="fa fa-arrow-left"></i> &nbsp; Back</a>

        @if (Model.Status != ScheduleStatus.Draft)
        {
            if (Model.Notifications.Count(a => a.IsRead && a.IsActive) == Model.Notifications.Count())
            {
                <a class="btn btn-lg btn-info " asp-action="PublishSchedule" asp-route-id="@Model.ScheduleId" data-ajax-method="POST" data-ajax="true" data-ajax-failure="handleModalPostFailure" data-ajax-update=".modal__container" data-ajax-success="shideModal('success', 'Schedule was just published and saved');" data-ajax-confirm="This action will sent publish and you can no longer make changes. Are you sure?" data-ajax-begin="showModal()"><i class="fa fa-play-circle"></i> &nbsp; Publish</a>
            }
            else if(Model.Notifications.Count() <= 0)
            {
                <a class="btn btn-lg btn-primary " asp-action="NotifyEveryone" asp-route-id="@Model.ScheduleId" data-ajax-method="POST" data-ajax="true" data-ajax-failure="handleModalPostFailure" data-ajax-update=".modal__container" data-ajax-success="sendNotification('success', 'Notifications were sent out');" data-ajax-confirm="This action will sent notifications to all employees in this roster" data-ajax-begin="showModal()"><i class="fa fa-comment-dots"></i> &nbsp; Notify</a>
            }
        }

        @*<button type="submit" class="btn btn-primary btn-lg">Notify &nbsp; <i class="fa fa-comment-dots"></i></button>*@

    </div>
</div>

@*<form asp-action="Process" asp-controller="Roster" data-ajax="true" data-ajax-method="POST" data-ajax-update="#card-placeholder" data-ajax-failure="handleModalPostFailure">
        <div class="card">
            <input type="hidden" asp-for="SelectedMenu" />
            <input type="hidden" asp-for="ScheduleId" />
            <div class="card-header">
                <div class="card-title">@Model.Header - <small>@Model.Duration</small> :@Model.Slots</div>
            </div>
            <div class="card-body">
                <div id="rosterWrapper">
                </div>
            </div>

        </div>
    </form>*@


<script>
    $('table#weekly-table11 tr').sortable({
        items: 'td.cell-attndance .item-X',
        connectWith: 'table#weekly-table11 tr',
        stop: function (e, prop) {
            var id = prop.item;
            const colNum = 3;
            console.log('prop', prop);
            console.log('e', e);
            $('table#weekly-table11 tr').not(':last').each(function () {
                var $this = $(this);
                console.log($(this));
                //if ($this.children().length < colNum) {
                //    $this.append($this.next().children(':first'));
                //}
                //else if ($this.children().length > colNum) {
                //    $this.next().prepend($this.children(':last'));
                //}
            });
        }
    });
</script>