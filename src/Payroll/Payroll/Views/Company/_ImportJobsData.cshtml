@using System.ComponentModel.DataAnnotations;

@{
    var dd = new BulkImportJobVm();
}

<form asp-action="InportJobsData" asp-controller="Company" data-ajax="true" data-ajax-method="POST" data-ajax-update="#importSumm" data-ajax-success="$('.tab-link[data-tab=2]').click()" id="bulkUpdateEmplForm" data-ajax-failure="handleModalPostFailure" >
    @Html.AntiForgeryToken()
    <input name="Id" id="Id" type="hidden" value="@ViewBag.Id" />

    @*<header class="modal__header">
            <h2 class="modal__title" id="modal-1-title">
                Import Employee Data
            </h2>
            <button class="modal__close" aria-label="Close modal" data-micromodal-close></button>
        </header>*@
    <main class="" id="">
        <div class="form-group">
            <label for="templateFile" class="control-label">
                <a class="" asp-action="DownloadImportTemplate" asp-route-jobs="1" asp-route-controller="Company">Download the template excel file (One record is added as an example)</a>. Fille the template and upload the filled template below
            </label>

            <p> <input type="file" id="templateFile" class="form-control-file" /></p>

            <button class="btn btn-primary" type="button" onclick="uploadBullk()" id="bulkUpdateImportBtn">
                Upload & Verify Data
            </button>
        </div>

        <div class="form-group">
            <div class="alert alert-warning mt-1">
                <h6 class=""><i class="fa fa-exclamation-triangle"></i> Read below information carefully!</h6>
                <ul>
                    <li>We will always attempt to read data from the <b>First Work Sheet</b> in the Excel file</li>
                    <li>Make sure all column format is set to <b>General. This should remove 'cast object' error</b>. In case the error still persists, try to use <b>Data => Text to Columns wizard</b> to change formatting to text or date format</li>
                    <li>Field <b>'Total'</b> must be an integer value and this indicates total number of jobs required</li>
                </ul>
            </div>
        </div>

        <table class="table table-responsive">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Field</th>
                    <th>Data Type</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < dd.GetType().GetProperties().Length; i++)
                {
                    <tr>
                        <th>@(i+1)</th>
                        <th>@dd.GetType().GetProperties()[i].Name</th>
                        <td>
                            @dd.GetType().GetProperties()[i].PropertyType.Name
                        </td>
                        <td>
                            @if (dd.GetType().GetProperties()[i].IsDefined(typeof(DisplayAttribute), false))
                            {
                                @(dd.GetType().GetProperties()[i].GetCustomAttributes(typeof(DisplayAttribute), false).Cast<DisplayAttribute>().Single().Description)
                            }

                            @if (dd.GetType().GetProperties()[i].PropertyType.IsEnum)
                            {
                                <span>Choose any of the values defined for this field</span>
                                var values = Enum.GetValues(dd.GetType().GetProperties()[i].PropertyType);
                                <br />
                                @foreach (var item in values)
                                {
                                    <span class="badge badge-info">@item </span>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </main>
</form>


<script>
    function uploadBullk() {
        var formData = new FormData();

        var file = document.getElementById("templateFile").files[0];
        formData.append("file", file);

        var id = $('form#bulkUpdateEmplForm #Id').val().trim()
        formData.append("Id", id);


        var token = $('form#bulkUpdateEmplForm input[name="__RequestVerificationToken"]').val().trim()
        formData.append("__RequestVerificationToken", token);


        $.ajax({
            type: "POST",
            url: $('form#bulkUpdateEmplForm').attr('action'),
            data: formData,
            processData: false,
            contentType: false,
            beforeSend: function (response) {
                $('#bulkUpdateImportBtn').html(getLoaderSmWhiteHtml());
            },
            success: function (response) {

                $('#importSumm').html(response);
                $('.tab-link[data-tab=2]').click()

            },
            complete: function (response) {
                $('#bulkUpdateImportBtn').html("Upload & Verify Data");
            },
            error: handleModalPostFailure,
        });
    }
</script>


